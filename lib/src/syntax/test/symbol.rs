use crate::syntax::repr::Repr;
use crate::syntax::test::call;
use crate::syntax::test::list;
use crate::syntax::test::symbol;

pub(crate) fn expected() -> Vec<Repr> {
    vec![
        symbol(""),
        symbol(" "),
        symbol("("),
        symbol(")"),
        symbol("["),
        symbol("]"),
        symbol("{"),
        symbol("}"),
        symbol("<"),
        symbol(">"),
        symbol("\\"),
        symbol("|"),
        symbol("/"),
        symbol("'"),
        symbol("\""),
        symbol(":"),
        symbol(";"),
        symbol("!"),
        symbol("?"),
        symbol("."),
        symbol(","),
        symbol("`"),
        symbol("~"),
        symbol("@"),
        symbol("#"),
        symbol("$"),
        symbol("%"),
        symbol("^"),
        symbol("&"),
        symbol("*"),
        symbol("-"),
        symbol("+"),
        symbol("_"),
        symbol("="),
        symbol("->"),
        symbol("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"),
        symbol("a"),
        symbol("Z"),
        symbol("abc"),
        symbol("Xyz"),
        symbol("0"),
        symbol("0123456789"),
        symbol("\"a"),
        symbol("'a"),
        symbol("to_be_or_not_to_be"),
        symbol("R34G148B83"),
        symbol("a%"),
        symbol("%a"),
        symbol("&1"),
        symbol(";a"),
        symbol("a;"),
        symbol(":1"),
        symbol("+1"),
        symbol("+="),
        symbol("+nightly"),
        symbol("-1.1"),
        symbol("->"),
        symbol("--stat"),
        symbol("\\"),
        symbol(" "),
        symbol(" ab cd"),
        symbol("\\_\\''"),
        symbol("-|/\\:;!?"),
        list(vec![symbol("%"), call(list(vec![]), symbol(":"))]),
    ]
}
