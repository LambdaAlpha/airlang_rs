;[
    f = (function ('' {
        body : input,
    })),
    f (not 't)
]
# ---
'f
# ===
;[
    f = (function (` {
        body : (('t not) input)
    })),
    f (not 't)
]
# ---
't
# ===
;[
    f = (function {
        body : ('' (not input)),
        context : (context {map : {: not}})
    }),
    f (not 't)
]
# ---
't
# ===
;[
    f = (function {
        body : ('' (n a)),
        input_name : ('' a),
        context : (context {map : {n : not}})
    }),
    f (not 't)
]
# ---
't
# ===
;[
    f = (function ('' {
        body : input,
        eval_mode : '',
    })),
    f (not 't)
]
# ---
not 't
# ===
;[
    f = (function (` {
        body : (('t not) input),
        eval_mode : $,
    })),
    f (not 't)
]
# ---
't
# ===
;[
    f = (function (` {
        body : input,
        eval_mode : `,
    })),
    f (not 't)
]
# ---
not 't
# ===
;[
    f = (function ('' {
        body : input,
        eval_mode : `,
    })),
    f ('t (not 't))
]
# ---
'f
# ===
;[
    f = (function ('' {
        body : input,
        eval_mode : $,
    })),
    f {a : b}
]
# ---
{a : '}
# ===
;[
    f = (function ('' {
        body : input,
        pair_eval_mode : (` : $),
    })),
    a f b
]
# ---
a : '
# ===
;[
    f = (function ('' {
        body : input,
        pair_eval_mode : (` : $),
        eval_mode : ''
    })),
    f (not 'f)
]
# ---
not 'f
# ===
;[
    f = (function (` {
        body : (;[[] set_super caller, $2 input]),
        eval_mode : '',
        caller_access : mutable,
        context : ('t (context {map : {
            : ;,
            : $2,
            : set_super,
            : load,
        }}))
    })),
    a = 1,
    f a
]
# ---
1
# ===
;[
    a = 1,
    f = (function (` {
        body : (caller $constant a),
        caller_access : free,
        context : ('t (context {map : {
            : $constant,
        }}))
    })),
    f '
]
# ---
'
# ===
;[
    a = 1,
    f = (function (` {
        body : (caller $constant a),
        caller_access : constant,
        context : ('t (context {map : {
            : $constant,
        }}))
    })),
    f '
]
# ---
1
# ===
;[
    a = 1,
    f = (function (` {
        body : (caller $constant a),
        caller_access : mutable,
        context : ('t (context {map : {
            : $constant,
        }}))
    })),
    f '
]
# ---
1
# ===
;[
    a = 1,
    f = (function (` {
        body : (caller $mutable a),
        caller_access : constant,
        context : ('t (context {map : {
            : $mutable,
        }}))
    })),
    f '
]
# ---
1
# ===
;[
    f = (function (` {
        body : (caller $mutable (('f ('t input)) = 2)),
        eval_mode : '',
        caller_access : mutable,
        context : ('t (context {map : {
            : $mutable,
        }}))
    })),
    a = 1,
    f a,
    a
]
# ---
2
# ===
;[
    f = (function (` {
        body : (caller $mutable (('f ('t input)) = 2)),
        eval_mode : '',
        caller_access : mutable,
        context : ('t (context {map : {
            : $mutable,
        }}))
    })),
    a =final 1,
    f a,
    a
]
# ---
1
# ===
;[
    f = (function (` {
        body : (caller $mutable (('f ('t input)) = 2)),
        eval_mode : '',
        caller_access : constant,
        context : ('t (context {map : {
            : $mutable,
        }}))
    })),
    a = 1,
    f a,
    a
]
# ---
1
# ===
function_represent (function (` {body : input}))
# ---
{body : input}
# ===
function_represent not
# ---
{id : not}
# ===
function_represent (function ('' {body : input, caller_access : constant}))
# ---
{body : input, caller_access : constant}
# ===
function_represent ==
# ---
{id : ==, caller_access : constant, eval_mode : '', pair_eval_mode : (` : `)}
# ===
function_represent (function ('' {
    body : i,
    input_name : i,
    caller_name : c,
    eval_mode : '',
    pair_eval_mode : (` : `),
    caller_access : mutable,
}))
# ---
{
    body : i,
    input_name : i,
    caller_name : c,
    eval_mode : '',
    pair_eval_mode : (` : `),
    caller_access : mutable,
}
# ===
function_caller_access function
# ---
free
# ===
function_caller_access function_caller_access
# ---
constant
# ===
function_caller_access $
# ---
mutable
# ===
;[f = (function ('' {body : input})), function_caller_access f]
# ---
free
# ===
function_eval_mode not
# ---
$
# ===
function_eval_mode $
# ---
''
# ===
function_eval_mode function_eval_mode
# ---
`
# ===
;[f = (function ('' {body : input})), function_eval_mode f]
# ---
$
# ===
function_pair_eval_mode and
# ---
$ : $
# ===
function_pair_eval_mode not
# ---
$ : $
# ===
function_is_primitive not
# ---
't
# ===
;[f = (function ('' {body : input})), function_is_primitive f]
# ---
'f
# ===
function_id not
# ---
not
# ===
;[neg = not, function_id neg]
# ---
not
# ===
;[f = (function ('' {body : input})), function_id f]
# ---
'
# ===
;[f = (function ('' {body : input})), function_body f]
# ---
input
# ===
function_body not
# ---
'
# ===
;[
    ctx = (context {map : {a : 1}}),
    f = (function {body : ('' input), context : ctx}),
    ('t (function_context f)) == ctx
]
# ---
't
# ===
function_context not
# ---
'
# ===
;[f = (function ('' {body : input})), function_input_name f]
# ---
input
# ===
function_input_name not
# ---
'
# ===
;[f = (function ('' {body : input, caller_access : constant})), function_caller_name f]
# ---
caller
# ===
;[f = (function ('' {body : input})), function_caller_name f]
# ---
'
# ===
function_caller_name not
# ---
'
