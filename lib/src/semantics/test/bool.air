not 't
# ---
'f
# ===
not 'f
# ---
't
# ===
't and 'f
# ---
'f
# ===
't and 't
# ---
't
# ===
;['f and (;[a = 1, 't]), a]
# ---
1
# ===
't or 'f
# ---
't
# ===
'f or 'f
# ---
'f
# ===
;['t or (;[a = 1, 'f]), a]
# ---
1
# ===
't == 'f
# ---
'f
# ===
'f == 'f
# ---
't
# ===
1 == 1
# ---
't
# ===
1.0 == 1.0
# ---
't
# ===
;[a = ('' c), b = ('' c), a == b]
# ---
't
# ===
"" == ""
# ---
't
# ===
(1 : 2) == (1 : 2)
# ---
't
# ===
[1, 2] == [1, 2]
# ---
't
# ===
{} == {}
# ---
't
# ===
;[a = (1 2), b = (1 2), a == b]
# ---
't
# ===
(1 ? 2) == (1 ? 2)
# ---
't
# ===
;[a = (function {body : input}), b = (function {body : input}), a == b]
# ---
't
# ===
;[a = (context {}), b = (context {}), a == b]
# ---
't
# ===
;[
    a = (proposition {input : 1, output : 1, access : ('' free)}),
    b = (proposition {input : 1, output : 1, access : ('' free)}),
    a == b
]
# ---
't
# ===
;[
    a = (theorem {input : 1, access : ('' free)}),
    b = (theorem {input : 1, access : ('' free)}),
    a == b
]
# ---
't
# ===
1 == "a"
# ---
'f
# ===
1 =/= "a"
# ---
't
# ===
1 =/= 1
# ---
'f
# ===
;[a = 1, a == 1]
# ---
't
# ===
;[a = 1, a =/= 1]
# ---
'f
# ===
;[a = 1, 1 == a]
# ---
't
# ===
;[a = 1, 1 =/= a]
# ---
'f
# ===
;[a = 1, b = 1, a == b]
# ---
't
# ===
;[a = 1, b = 1, a =/= b]
# ---
'f
# ===
;[a = 1, a == a]
# ---
't
# ===
;[a = 1, a =/= a]
# ---
'f
# ===
a == b
# ---
't
# ===
a =/= b
# ---
'f
