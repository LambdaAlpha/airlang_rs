;[a = 1, .. a]
# ---
1
# ===
;[a = 1, .. "a"]
# ---
'
# ===
;[a = 1, b = (value a), .. (eval b)]
# ---
1
# ===
;[a = (context {const : {b : 1}}), a .. b]
# ---
1
# ===
;[a = (context {const : {b : 1}}), .. [a, b]]
# ---
1
# ===
is_null a
# ---
't
# ===
;[a = 1, is_null a]
# ---
'f
# ===
;[a = 1, a]
# ---
1
# ===
;[a = 1, a = 2]
# ---
1
# ===
;[a = 1, a = 2, a]
# ---
2
# ===
;[a = 1, b = a, b]
# ---
1
# ===
;[a = (value b), (eval a) = 1, b]
# ---
1
# ===
;[(a : b) = (1 : 2), a]
# ---
1
# ===
;[(a : b) = (1 : 2), b]
# ---
2
# ===
;[(a : b : c) = (1 : 2 : 3), [a, b, c]]
# ---
[1, 2, 3]
# ===
;[(value (f a)) = (value (1 2)), [f, a]]
# ---
[1, 2]
# ===
;[(value (a b c)) = (value (1 2 3)), [a, b, c]]
# ---
[1, 2, 3]
# ===
;[(f ? b) = (1 ? 2), [f, b]]
# ---
[1, 2]
# ===
;[[a, b, c] = [1, 2, 3], [a, b, c]]
# ---
[1, 2, 3]
# ===
;[[a, b] = [1, 2, 3], [a, b]]
# ---
[1, 2]
# ===
;[[a, ..., c] = [1, 2, 3], [a, c]]
# ---
[1, 3]
# ===
;[[a, ..., c, d] = [1, 2, 3, 4, 5], [a, c, d]]
# ---
[1, 4, 5]
# ===
;[[a, ..., b, ..., c] = [1, 2, 3, 4, 5, 6], [a, b, c]]
# ---
[1, 4, 6]
# ===
;[[a, ..., b, c] = [1, 2], [a, b, c]]
# ---
[1, ', ']
# ===
;[a = 1, b = 2, c = 3, [a, ..., b, c] = [4, 5, 6, 7, 8]]
# ---
[1, ', 2, 3]
# ===
;[{a, b} = {a : 1, b : 2, c : 3}, [a, b]]
# ---
[1, 2]
# ===
;[{1 : a, 3 : b} = {1 : 2, 3 : 4}, [a, b]]
# ---
[2, 4]
# ===
;[a = 1, b = 2, (a : b) = (3 : 4)]
# ---
1 : 2
# ===
;[a =final 1, a = 2]
# ---
'
# ===
;[a =final 1, a = 2, a]
# ---
1
# ===
;[a =final 1, a =final 2, a]
# ---
1
# ===
;[a =final 1, a =const 2, a]
# ---
1
# ===
;[a =final (1 : 2), a set1 3, a]
# ---
3 : 2
# ===
;[a =const (1 : 2), a set1 3, a]
# ---
1 : 2
# ===
;[a =const 1, a = 2, a]
# ---
1
# ===
;[a =const 1, a =final 2, a]
# ---
1
# ===
;[a =const 1, a =const 2, a]
# ---
1
# ===
;[a = 1, final a, a = 2, a]
# ---
1
# ===
;[a = (1 : 2), final a, a set1 3, a]
# ---
3 : 2
# ===
;[a =const (1 : 2), final a, a set1 3, a]
# ---
1 : 2
# ===
;[a = (1 : 2), const a, a set1 3, a]
# ---
1 : 2
# ===
;[a = 1, const a, a = 2, a]
# ---
1
# ===
;[a =final (1 : 2), const a, a set1 3, a]
# ---
1 : 2
# ===
is_final a
# ---
'f
# ===
;[a = 1, is_final a]
# ---
'f
# ===
;[a =final 1, is_final a]
# ---
't
# ===
;[a =const 1, is_final a]
# ---
't
# ===
is_const a
# ---
'f
# ===
;[a = 1, is_const a]
# ---
'f
# ===
;[a =final 1, is_const a]
# ---
'f
# ===
;[a =const 1, is_const a]
# ---
't
# ===
;[a = 1, move a]
# ---
1
# ===
;[a = 1, move a, a]
# ---
'
# ===
;[a =final 1, move a]
# ---
'
# ===
;[a =const 1, move a]
# ---
'
# ===
;[a = (value b), b = 1, move (eval a)]
# ---
1
# ===
;[a = (context {var : {b : 1}}), a move b]
# ---
1
# ===
;[a = (context {var : {b : 1}}), a move b, a .. b]
# ---
'
# ===
;[a = (context {var : {b : 1}}), move [a, b]]
# ---
1
# ===
;[a = (context {var : {b : 1}}), move [a, b], a .. b]
# ---
'
# ===
;[a = (context {var : {b : 1}}), a .. b]
# ---
1
# ===
;[a = (context {var : {b : 1, ;, =}}), a eval_mutable (;[b = 2, b])]
# ---
2
# ===
;[a = (context {final : {b : 1, ;, =}}), a eval_mutable (;[b = 2, b])]
# ---
1
# ===
;[a = (context {const : {b : (1 : 2), ;, set1}}), a eval_mutable (;[b set1 3, b])]
# ---
1 : 2
# ===
;[a = (context {var : {b : 1}}), ' set_super a, b]
# ---
1
# ===
;[a = (context {var : {b : 1}}), b = 2, ' set_super a, b]
# ---
2
# ===
;[a = (context {}), ' set_super a, b = 1, b : (a .. b)]
# ---
1 : 1
# ===
;[a = (context {}), b = 1, ' set_super a, b = 2, b : (a .. b)]
# ---
2 : '
# ===
;[a = (context {var : {b : (1 : 2)}}), ' set_super a, b set1 3, a .. b]
# ---
3 : 2
# ===
;[a = (context {var : {b : 1}}), ' set_super a, (move b) : (a .. b)]
# ---
1 : '
# ===
;[a = (context {var : {b : 1}}), b = 2, ' set_super a, (move b) : (a .. b)]
# ---
2 : 1
# ===
;[a = (context {}), ' set_super a, b =local 2, b : (a .. b)]
# ---
2 : '
# ===
;[
    a = (context {const : {b : (context {const : {c : 1}})}}),
    a set_super b,
    a .. c
]
# ---
1
# ===
;[
    a = (context {const : {b : (context {const : {c : 1}})}}),
    a = ((move a) set_super b),
    a .. c
]
# ---
1
