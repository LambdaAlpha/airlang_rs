;[a = 1, read a]
-----
1
=====
;[a = 1, read "a"]
-----
'
=====
;[a = 1, b = (' a), read ('t b)]
-----
1
=====
;[a = (' context {b : 1}), [a] do (read b)]
-----
1
=====
;[a = (' context {b : 1}), [a] do (read b)]
-----
1
=====
;[a = 1, move a]
-----
1
=====
;[a = 1, move a, a]
-----
'
=====
;[(a ': final) = 1, move a]
-----
'
=====
;[(a ': constant) = 1, move a]
-----
'
=====
;[a = (' b), b = 1, move ('t a)]
-----
1
=====
;[a = (' context {b : 1}), [a] do (move b)]
-----
1
=====
;[a = (' context {b : 1}), [a] do (move b), [a] do (read b)]
-----
'
=====
;[a = (' context {b : 1}), [a] do (move b)]
-----
1
=====
;[a = (' context {b : 1}), [a] do (move b), [a] do (read b)]
-----
'
=====
;[a = (' context {b : 1}), [a] do (read b)]
-----
1
=====
;[a = (' context {}), b = 1, [a] do (b = b), [a] do (read b)]
-----
1
=====
;[a = 1, [] do (b = a), b]
-----
1
=====
;[a = (' context {b : (' context {})}), c = 1, [a, b] do (d = c), [a, b] do (read d)]
-----
1
=====
;[a = (' context {}), b = 1, [a] do ((b ': final) = b), [a] do (is_final b)]
-----
't
=====
;[a = (' context {}), b = 1, [a] do ((b ': constant) = b), [a] do (is_constant b)]
-----
't
=====
;[a = 1, a]
-----
1
=====
;[a = 1, a = 2]
-----
1
=====
;[a = 1, a = 2, a]
-----
2
=====
;[a = 1, b = a, b]
-----
1
=====
;[a = (' b), ('t a) = 1, b]
-----
1
=====
;[(a ': final) = 1, is_final a]
-----
't
=====
;[(a ': {tag : final, local}) = 1, (is_final a) and (is_local a)]
-----
't
=====
;[(a : b) = (1 : 2), a]
-----
1
=====
;[(a : b) = (1 : 2), b]
-----
2
=====
;[(a : b : c) = (1 : 2 : 3), [a, b, c]]
-----
[1, 2, 3]
=====
;[(a : b ': final) = (1 : 2), (is_final a) and (is_final b)]
-----
't
=====
;[((a ': final) : (b ': constant)) = (1 : 2), (is_final a) and (is_constant b)]
-----
't
=====
;[(f a) = (' (1 2)), [f, a]]
-----
[1, 2]
=====
;[(a b c) = (' (1 2 3)), [a, b, c]]
-----
[1, 2, 3]
=====
;[(f ? b) = (1 ? 2), [f, b]]
-----
[1, 2]
=====
;[[a, b, c] = [1, 2, 3], [a, b, c]]
-----
[1, 2, 3]
=====
;[[a, b] = [1, 2, 3], [a, b]]
-----
[1, 2]
=====
;[a = 1, b = 2, [a, b] = [3], [a, b]]
-----
[3, ']
=====
;[a = 1, b = 2, [a, b] = [3]]
-----
[1, 2]
=====
;[[a, ..., c] = [1, 2, 3], [a, c]]
-----
[1, 3]
=====
;[[a, ..., c, d] = [1, 2, 3, 4, 5], [a, c, d]]
-----
[1, 4, 5]
=====
;[[a, ..., b, ..., c] = [1, 2, 3, 4, 5, 6], [a, b, c]]
-----
[1, 4, 6]
=====
;[[a, ..., b, c] = [1, 2], [a, b, c]]
-----
[1, ', ']
=====
;[a = 1, b = 2, c = 3, [a, ..., b, c] = [4, 5, 6, 7, 8]]
-----
[1, ', 2, 3]
=====
;[{: a, : b} = {(' a) : 1, (' b) : 2, (' c) : 3}, [a, b]]
-----
[1, 2]
=====
;[{1 : a, 3 : b} = {1 : 2, 3 : 4}, [a, b]]
-----
[2, 4]
=====
;[a = 1, b = 2, {1 : a, 2 : b} = {1 : 2, 3 : 4}]
-----
{1 : 1, 2 : 2}
=====
;[a = 1, b = 2, (a : b) = (3 : 4)]
-----
1 : 2
=====
;[(a ': final) = 1, a = 2]
-----
'
=====
;[(a ': final) = 1, a = 2, a]
-----
1
=====
;[(a ': final) = 1, (a ': final) = 2, a]
-----
1
=====
;[(a ': final) = 1, (a ': constant) = 2, a]
-----
1
=====
;[(a ': final) = (1 : 2), a set_1 3, a]
-----
3 : 2
=====
;[(a : b ': final) = (1 : 2), (is_final a) and (is_final b)]
-----
't
=====
;[(a ': constant) = (1 : 2), a set_1 3, a]
-----
1 : 2
=====
;[(a ': constant) = 1, a = 2, a]
-----
1
=====
;[(a ': constant) = 1, (a ': final) = 2, a]
-----
1
=====
;[(a ': constant) = 1, (a ': constant) = 2, a]
-----
1
=====
;[(a : b ': constant) = (1 : 2), (is_constant a) and (is_constant b)]
-----
't
=====
;[a = 1, set_final a, a = 2, a]
-----
1
=====
;[a = (1 : 2), set_final a, a set_1 3, a]
-----
3 : 2
=====
;[(a ': constant) = (1 : 2), set_final a, a set_1 3, a]
-----
1 : 2
=====
;[a = (' context {b : 1}), [a] do (set_final b), [a] do (is_final b)]
-----
't
=====
;[a = (1 : 2), set_constant a, a set_1 3, a]
-----
1 : 2
=====
;[a = 1, set_constant a, a = 2, a]
-----
1
=====
;[a = (' context {b : 1}), [a] do (set_constant b), [a] do (is_constant b)]
-----
't
=====
;[(a ': final) = (1 : 2), set_constant a, a set_1 3, a]
-----
1 : 2
=====
is_final a
-----
'f
=====
;[a = 1, is_final a]
-----
'f
=====
;[(a ': final) = 1, is_final a]
-----
't
=====
;[(a ': constant) = 1, is_final a]
-----
't
=====
;[': = (' ':), final = (' final), a = (' context {b : (1 ': final)}), [a] do (is_final b)]
-----
't
=====
;[
    ': = (function {
        body : (': (move input)),
        input_mode : ('t : '),
        context : (' context {': : (' ':), : move}),
    }),
    a = (' context {b : (1 ': final)}),
    [a] do (is_final b)
]
-----
't
=====
is_constant a
-----
'f
=====
;[a = 1, is_constant a]
-----
'f
=====
;[(a ': final) = 1, is_constant a]
-----
'f
=====
;[(a ': constant) = 1, is_constant a]
-----
't
=====
;[': = (' ':), constant = (' constant), a = (' context {b : (1 ': constant)}), [a] do (is_constant b)]
-----
't
=====
is_null a
-----
't
=====
;[a = 1, is_null a]
-----
'f
=====
;[a = (' context {}), [a] do (is_null b)]
-----
't
=====
;[a = (' context {b : 1}), [a] do (is_null b)]
-----
'f
=====
is_local a
-----
'f
=====
;[a = 1, is_local a]
-----
't
=====
;[a = (' context {}), set_meta (' context {super : a}), b = 1, is_local b]
-----
'f
=====
;[
    a = (' context {b : (' context {})}),
    [a] do (c = 1),
    [a] do (set_meta {super : b}),
    [a] do (is_local c)
]
-----
't
=====
;[a = (' context {super : b} context {b : (' context {})}), [a] do (c = 1), [a] do (is_local c)]
-----
'f
=====
;[a = (' context {b : 1, : ;, : =}), [a] do (; [b = 2, b])]
-----
2
=====
;[': = (' ':), final = (' final), a = (' context {b : (1 ': final), : ;, : =}), [a] do (; [b = 2, b])]
-----
1
=====
;[
    ': = (' ':),
    constant = (' constant),
    a = (' context {b : (1 : 2 ': constant), : ;, : set_1}),
    [a] do (; [b set_1 3, b])
]
-----
1 : 2
=====
;[
    mm = (' context {super : (' s)}),
    s = (' context {super : (' c)}),
    m = ((move mm) context {s : (move s)}),
    c = (' context {d : 1}),
    ctx = ((move m) context {c : (move c)}),
    [ctx] do (read d)
]
-----
1
=====
access '
-----
mutable
=====
' do (access ')
-----
free
=====
;[a ': constant = (' context {}), [a] do (access ')]
-----
constant
=====
;[a = (' context {}), [a] do (access ')]
-----
mutable
=====
;[a = (' context {b : 1}), set_meta (' context {super : (' a)}), b]
-----
1
=====
;[a = (' context {b : 1}), b = 2, set_meta (' context {super : (' a)}), b]
-----
2
=====
;[a = (' context {}), set_meta (' context {super : (' a)}), b = 1, b : ([a] do (read b))]
-----
1 : 1
=====
;[a = (' context {}), b = 1, set_meta (' context {super : (' a)}), b = 2, b : ([a] do (read b))]
-----
2 : '
=====
;[a = (' context {b : (1 : 2)}), set_meta (' context {super : (' a)}), b set_1 3, [a] do (read b)]
-----
3 : 2
=====
;[a = (' context {b : 1}), set_meta (' context {super : (' a)}), (move b) : ([a] do (read b))]
-----
1 : '
=====
;[a = (' context {b : 1}), b = 2, set_meta (' context {super : (' a)}), (move b) : ([a] do (read b))]
-----
2 : 1
=====
;[a = (' context {}), set_meta (' context {super : (' a)}), (b ': local) = 2, b : ([a] do (read b))]
-----
2 : '
=====
;[a = (' context {}), set_meta (' context {super : (' a)}), (b : c ': local) = (1 : 2), b]
-----
1
=====
;[a = ((' context {super : (' b)}) context {b : (' context {c : 1})}), [a] do (read c)]
-----
1
=====
context.represent (' context {})
-----
' : {}
=====
;[
    (meta : m) = (context.represent (' context {super : (' b)} context {a : 1})),
    meta = (context.represent (move meta)),
    meta : m
]
-----
' : {super : b} : {a : 1}
=====
;[': = (' ':), final = (' final), context.represent (' context {a : (1 ': final)})]
-----
' : {a : (1 ': final)}
=====
;[(_ : m) = (context.represent (' context {b : (' context {})})), b = (m map.remove (' b)), type_of b]
-----
context
=====
;[a = (' context {}), [a] do (has_meta ')]
-----
'f
=====
;[a = (' context {} context {}), [a] do (has_meta ')]
-----
't
=====
;[
    a = (' context {b : (' context {c : 1})}),
    [a] do (set_meta (' context {super : (' b)})),
    [a] do (read c)
]
-----
1
=====
;[
    a = (' context {b : (' context {c : (' context {d : 1})})}),
    [a, b] do (set_meta (' context {super : (' c)})),
    [a, b] do (read d)
]
-----
1
=====
;[a = (' context {super : (' b)} context {b : (' context {c : 1})}), [a] do ((' meta) do (read super))]
-----
b
=====
;[a = (' context {}), set_meta (' context {super : (' a)}), (' meta) do (read super)]
-----
a
=====
;[
    a = (' context {b : (' context {c : (' context {})})}),
    [a, b] do (set_meta (' context {super : (' c)})),
    [a, b] do ((' meta) do (read super))
]
-----
c
=====
;[a = (' context {} context {}), [a] do (set_meta '), [a] do (has_meta ')]
-----
'f
=====
;[a = (prelude '), [a] do (not 't)]
-----
'f
=====
;[a = (prelude '), [a] do (is_null prelude)]
-----
'f
=====
;[a = 1, b = (prelude '), [b] do (is_null a)]
-----
't
=====
;[a = (prelude '), [a] do (is_constant prelude)]
-----
't
=====
;[a = 1, b = (this '), [b] do (read a)]
-----
1
=====
;[a = (this '), b = 1, [a] do (is_null b)]
-----
't
=====
' do (this ')
-----
'
