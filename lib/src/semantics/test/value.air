;[a = ', type_of a]
-----
unit
=====
;[a = 't, type_of a]
-----
bool
=====
type_of (not 't)
-----
'f : bool
=====
;[a = 1, type_of a]
-----
int
=====
;[a = 1.0, type_of a]
-----
float
=====
;[a = 1xff, type_of a]
-----
bytes
=====
;[a = (`0 a), type_of a]
-----
symbol
=====
;[a = "", type_of a]
-----
string
=====
;[a = (1 : 2), type_of a]
-----
pair
=====
;[a = (`0 (f a)), type_of a]
-----
call
=====
;[a = (`0 (f ? a)), type_of a]
-----
reverse
=====
;[a = [], type_of a]
-----
list
=====
;[a = {}, type_of a]
-----
map
=====
;[a = (function {body : input}), type_of a]
-----
function
=====
;[a = (' context {}), type_of a]
-----
context
=====
;[a = (proposition {function : not, input : 't, output : 'f}), type_of a]
-----
proposition
=====
;[a = (theorem {function : not, input : 't}), type_of a]
-----
proposition
=====
't == 'f
-----
'f
=====
'f == 'f
-----
't
=====
1 == 1
-----
't
=====
1.0 == 1.0
-----
't
=====
;[a = (`0 c), b = (`0 c), a == b]
-----
't
=====
"" == ""
-----
't
=====
(1 : 2) == (1 : 2)
-----
't
=====
[1, 2] == [1, 2]
-----
't
=====
{} == {}
-----
't
=====
;[a = (1 2), b = (1 2), a == b]
-----
't
=====
(1 ? 2) == (1 ? 2)
-----
't
=====
;[a = (function {body : input}), b = (function {body : input}), a == b]
-----
't
=====
;[a = (' context {}), b = (' context {}), a == b]
-----
't
=====
;[
    a = (proposition {input : 1, output : 1, access : (`0 free)}),
    b = (proposition {input : 1, output : 1, access : (`0 free)}),
    a == b
]
-----
't
=====
;[
    a = (theorem {input : 1, access : (`0 free)}),
    b = (theorem {input : 1, access : (`0 free)}),
    a == b
]
-----
't
=====
(1 + 1) == (3 - 1)
-----
't
=====
;[a = 1, 1 == a]
-----
't
=====
1 == "a"
-----
'f
=====
1 =/= "a"
-----
't
=====
1 =/= 1
-----
'f
=====
;[a = 1, a == 1]
-----
't
=====
;[a = 1, a =/= 1]
-----
'f
=====
;[a = 1, 1 == a]
-----
't
=====
;[a = 1, 1 =/= a]
-----
'f
=====
;[a = 1, b = 1, a == b]
-----
't
=====
;[a = 1, b = 1, a =/= b]
-----
'f
=====
;[a = 1, a == a]
-----
't
=====
;[a = 1, a =/= a]
-----
'f
=====
a == b
-----
't
=====
a =/= b
-----
'f
