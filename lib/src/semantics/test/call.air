't . not
-----
'f
=====
't . not . not and 't
-----
't
=====
' .. (1 + 1)
-----
2
=====
;[a = 1, ' .. (load [a])]
-----
'
=====
' .. (; ('" [a ('t =) 1, a]))
-----
'
=====
' .. (get_1 (1 : 2))
-----
1
=====
;[[] .. (a = 1), a]
-----
1
=====
;[c = (context {map : {a : 1}}), a = ([c] .. (a = 2)), a]
-----
1
=====
;[a = (context {}), [a] .. (b = 1), [a] .. (read b)]
-----
1
=====
;[(a ': constant) = (context {map : {b : 1}}), [a] .. (` b)]
-----
1
=====
;[(a ': constant) = (context {map : {b : 1}}), [a] .. (b = 2), [a] .. (read b)]
-----
1
=====
;[': = ('' ':), constant = ('' constant), a = (context {map : {b : (1 ': constant)}}), [a] .. (` b)]
-----
1
