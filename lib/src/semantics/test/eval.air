'' a
# ---
a
# ===
$ (not 'f)
# ---
't
# ===
` [a, f a, a : b, f ? a, {a : b}]
# ---
[a, f a, a : b, f ? a, {a : b}]
# ===
` {a : b, c : ('t (not 'f))}
# ---
{a : b, c : 't}
# ===
` [a, b : ['t (not 't)]]
# ---
[a, b : ['f]]
# ===
` ('f a)
# ---
a
# ===
` ('f ('t (not 't)))
# ---
't (not 't)
# ===
` ('f ('f a))
# ---
'f a
# ===
$ {: a, (not 't) : c, : (not 'f)}
# ---
{', 'f : ', : 't}
# ===
$ {{a : b} : {c : d}}
# ---
{{' : '} : {' : '}}
# ===
$ {('' (not 'f)) : a}
# ---
{(not 'f) : '}
# ===
$ [1, {a : b}]
# ---
[1, {' : '}]
# ===
$ {('' a) : ('' {b : c})}
# ---
{a : {b : c}}
# ===
$ {('' a) : ($ {b : c})}
# ---
{a : {' : '}}
# ===
;[a = 1, $2 ('' a)]
# ---
1
# ===
('' a) $2 ('' b)
# ---
' : '
# ===
;[a = ('' b), b = ('' c), c = 1, $3 a]
# ---
1
# ===
$free (1 ('t +) 1)
# ---
2
# ===
;[a = 1, $free a]
# ---
'
# ===
$free (('t ;) [a ('t =) 1, a])
# ---
'
# ===
$free (('t get_1) (1 : 2))
# ---
1
# ===
;[(_ : a) = ((context {map : {a : 1, : =}}) $mutable (a = 2)), a]
# ---
1
# ===
;[a = (context {map : {: =}}), a $mutable (b = 1), load [a, b]]
# ---
1
# ===
;[a =constant (context {map : {b : 1}}), a $mutable b]
# ---
1
# ===
;[a =constant (context {map : {b : 1, : =}}), a $mutable (b = 2), load [a, b]]
# ---
1
# ===
;[(_ : a) = ((context {map : {: =, b : (1 : constant)}}) $constant b), a]
# ---
1
# ===
;[a = (context {map : {: =, b : (1 : constant)}}), a $constant b]
# ---
1
# ===
;[a = (context {map : {: =}}), a $constant (b = 1), load [a, b]]
# ---
'
# ===
$is_free {value : 1}
# ---
't
# ===
$is_free {value : a}
# ---
'f
# ===
$is_free {value : a, eval_mode : $}
# ---
'f
# ===
$is_free {value : (1 : a)}
# ---
'f
# ===
$is_free {value : (1 : "a")}
# ---
't
# ===
$is_free {value : (1 : a), eval_mode : ($ : '')}
# ---
't
# ===
$is_free {value : [1, a]}
# ---
'f
# ===
$is_free {value : [1, "a"]}
# ---
't
# ===
$is_free {value : {a : 1, 1 : a}}
# ---
'f
# ===
$is_free {value : {a : 1, 1 : "a"}}
# ---
'f
# ===
$is_free {value : (f 1)}
# ---
'f
# ===
$is_free {value : (('t not) 't)}
# ---
't
# ===
$is_free {value : (('t not) a)}
# ---
'f
# ===
$is_free {value : (('t get_1) 1)}
# ---
'f
# ===
$is_free {value : a, eval_mode : ''}
# ---
't
# ===
$is_free {value : ('f ('t a)), eval_mode : `}
# ---
'f
# ===
$is_free {value : [a, ('f ('t 1))], eval_mode : `}
# ---
't
# ===
$is_constant {value : a}
# ---
't
# ===
$is_constant {value : (a : b)}
# ---
't
# ===
$is_constant {value : (a : (move a))}
# ---
'f
# ===
$is_constant {value : (a : (move a)), eval_mode : ($ : '')}
# ---
't
# ===
$is_constant {value : [1, a]}
# ---
't
# ===
$is_constant {value : [1, move a]}
# ---
'f
# ===
$is_constant {value : {a : 1, ('f ('t (move a))) : a}}
# ---
'f
# ===
$is_constant {value : {a : 1, a : (move a)}}
# ---
'f
# ===
$is_constant {value : {a : 1, a : a}}
# ---
't
# ===
$is_constant {value : (get_1 a)}
# ---
't
# ===
$is_constant {value : (move a)}
# ---
'f
# ===
$is_constant {value : (move a), eval_mode : $}
# ---
'f
# ===
$is_constant {value : (not (move a))}
# ---
'f
# ===
$is_constant {value : (; [])}
# ---
'f
# ===
$is_constant {value : (f (move a))}
# ---
'f
# ===
$is_constant {value : (move a), eval_mode : ''}
# ---
't
# ===
$is_constant {value : ('f ('t (move a))), eval_mode : `}
# ---
'f
# ===
$is_constant {value : [move a, 'f ('t a)], eval_mode : `}
# ---
't
# ===
;[c = (context {map : {move : not}}), $is_constant {value : (move a), context : c}]
# ---
't
