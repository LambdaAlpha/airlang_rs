length push
-----
; do [t = ; any text, l = t text.length ., t text.push "a", (t text.length .) == l + 1]
-----
true
=====
length join
-----
; do [
    a = ; any text,
    la = a text.length .,
    b = ; any text,
    lb = b text.length .,
    ab = . text.join [^a, ^b],
    lab = ab text.length .,
    lab == la + lb
]
-----
true
=====
length empty
-----
"" text.length .
-----
"" : 0
=====
length else
-----
"1" text.length .
-----
"1" : 1
=====
length ref
-----
; do [a = "12", a text.length .]
-----
2
=====
push join
-----
; do [a = ; any text, b = ; any text, t = a, t text.push b, t == . text.join [^a, ^b]]
-----
true
=====
push
-----
; do [a = "hello", b = "world", a text.push " ", a text.push ^b, ^a]
-----
"hello world"
=====
join empty
-----
"" text.join ["1", "2"]
-----
"12"
=====
join unit
-----
; do [a = "1", b = "2", c = "3", . text.join [^a, ^b, ^c]]
-----
"123"
=====
join no text
-----
. text.join []
-----
""
=====
join else
-----
"." text.join ["1", "2"]
-----
"1.2"
=====
into_utf8 from_utf8
-----
; do [t = ; any text, t == ; text.from_utf8 ; text.into_utf8 t]
-----
true
=====
into_utf8
-----
; text.into_utf8 "abc"
-----
byte(616263)
=====
from_utf8
-----
; text.from_utf8 byte(616263)
-----
"abc"
