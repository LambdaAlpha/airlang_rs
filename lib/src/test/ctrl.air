; 1
-----
1
=====
; []
-----
.
=====
; [1]
-----
1
=====
; [1, 2]
-----
2
=====
; [; [1, 2], 3]
-----
3
=====
; [1, ; [2, 3]]
-----
3
=====
; [1, 2, true break 3, 4]
-----
3
=====
; [1, 2, false else_break 3, 4]
-----
3
=====
; [1, true break ; ! [2, true break 3, 4], 5]
-----
3
=====
; [1, false else_break ; ! [2, false else_break 3, 4], 5]
-----
3
=====
; [1, false break ; ! [true break 3, 4], 5]
-----
5
=====
; [1, true else_break ; ! [false else_break 3, 4], 5]
-----
5
=====
; [b = 2, (b > 0) break b - 1, b + 1]
-----
1
=====
; [b = 2, (b > 0) else_break b - 1, b + 1]
-----
3
=====
; [1, true continue 2, 3]
-----
2
=====
; [1, false else_continue 2, 3]
-----
2
=====
; [[]]
-----
[]
=====
true if 1 : 2
-----
1
=====
true if_not 1 : 2
-----
2
=====
false if 1 : 2
-----
2
=====
false if_not 1 : 2
-----
1
=====
true if 1 : .
-----
1
=====
false if_not 1 : .
-----
1
=====
; [a = 1, true if 1 : a = 2, a]
-----
1
=====
; [a = 1, false if_not 1 : a = 2, a]
-----
1
=====
true if (false if 1 : 2) : 3
-----
2
=====
false if_not (true if_not 1 : 2) : 3
-----
2
=====
true if [1, true break 2, 3] : 4
-----
2
=====
false if_not [1, true break 2, 3] : 4
-----
2
=====
false if 1 : [2, true break 3, 4]
-----
3
=====
true if_not 1 : [2, true break 3, 4]
-----
3
=====
true if [1, true continue 2, 3] : 4
-----
2
=====
false if_not [1, true continue 2, 3] : 4
-----
2
=====
true if [[]] : .
-----
[]
=====
false if_not [[]] : .
-----
[]
=====
true if (eval []) : .
-----
[]
=====
false if_not (eval []) : .
-----
[]
=====
; [a = 1, a match {1 : 1 + 2, 2 : 2 + 3} : .]
-----
3
=====
1 match {1 : 2, 2 : 3} : .
-----
2
=====
3 match {1 : 2, 2 : 3} : 4
-----
4
=====
; [1 match {1 : a = 1, 2 : b = 2} : c = 3, [a, b, c]]
-----
[1, ., .]
=====
; [3 match {1 : a = 1, 2 : b = 2} : c = 3, [a, b, c]]
-----
[., ., 3]
=====
1 match {(2 - 1) : 2, (2 + 1) : 4} : .
-----
2
=====
; [a = id ! a, a match {(id a) : 1, (id b) : 2} : .]
-----
1
=====
1 match {1 : [2, true break 3, 4]} : 5
-----
3
=====
1 match {1 : [2, true continue 3, 4]} : 5
-----
3
=====
1 match {1 : [1, 2]} : 3
-----
2
=====
1 match {1 : (eval [])} : 2
-----
[]
=====
1 match {1 : [[]]} : 2
-----
[]
=====
true match {true : 1, false : 2} : 3
-----
1
=====
; [a = 1, false while a = 2, a]
-----
1
=====
; [a = 1, true while_not a = 2, a]
-----
1
=====
; [
    a = 0,
    b = 0,
    (a < 100) while [
        a = a + 17,
        b = b + 1
    ],
    b
]
-----
6
=====
; [
    a = 0,
    b = 0,
    (a >= 100) while_not [
        a = a + 17,
        b = b + 1
    ],
    b
]
-----
6
=====
; [
    a = 42,
    b = 24,
    (a <> b) while (a > b) if (
        a = a - b
    ) : (
        b = b - a
    ),
    a
]
-----
6
=====
; [
    a = 42,
    b = 24,
    (a == b) while_not (a > b) if (
        a = a - b
    ) : (
        b = b - a
    ),
    a
]
-----
6
=====
; [
    a = 0,
    b = 0,
    (b < 5) while [
        b = b + 1,
        (b == 2) continue .,
        a = a + b,
    ],
    a
]
-----
13
=====
; [
    a = 0,
    b = 0,
    (b >= 5) while_not [
        b = b + 1,
        (b == 2) continue .,
        a = a + b,
    ],
    a
]
-----
13
=====
; [
    a = 0,
    b = 0,
    (b < 5) while [
        b = b + 1,
        (b != 2) else_continue .,
        a = a + b,
    ],
    a
]
-----
13
=====
; [
    a = 0,
    b = 0,
    (b >= 5) while_not [
        b = b + 1,
        (b != 2) else_continue .,
        a = a + b,
    ],
    a
]
-----
13
=====
; [
    a = 0,
    b = 0,
    (b < 5) while [
        (a > 5) break a,
        b = b + 1,
        a = a + b,
    ]
]
-----
6
=====
; [
    a = 0,
    b = 0,
    (b >= 5) while_not [
        (a > 5) break a,
        b = b + 1,
        a = a + b,
    ]
]
-----
6
=====
; [
    a = 0,
    b = 0,
    (b < 5) while [
        (a <= 5) else_break a,
        b = b + 1,
        a = a + b,
    ]
]
-----
6
=====
; [
    a = 0,
    b = 0,
    (b >= 5) while_not [
        (a <= 5) else_break a,
        b = b + 1,
        a = a + b,
    ]
]
-----
6
