atom
-----
true
-----
true
=====
assign and read
-----
; do [a = 1, a]
-----
1
=====
symbol literal
-----
.a
-----
a
=====
symbol literal special 1
-----
..a
-----
.a
=====
symbol literal special 2
-----
...a
-----
..a
=====
symbol literal special 3
-----
.*a
-----
*a
=====
symbol literal special 4
-----
.^a
-----
^a
=====
ref
-----
; do [a = 1, *a]
-----
1
=====
ref will not remove
-----
; do [a = 1, *a, a]
-----
1
=====
ref special
-----
; do [.*.a = 1, *.a]
-----
1
=====
move
-----
; do [a = 1, ^a]
-----
1
=====
move will remove
-----
; do [a = 1, ^a, a]
-----
.
=====
move special
-----
; do [.**a = 1, ^*a]
-----
1
=====
pair eval
-----
(; not false) : "1"
-----
true : "1"
=====
list eval
-----
[; not true, 1, "2"]
-----
[false, 1, "2"]
=====
map eval
-----
{(; not true) : (; not true)}
-----
{false : false}
=====
call recursive
-----
; not ; not true
-----
true
=====
non-func call .
-----
; . 1
-----
; . 1
=====
non-func call true
-----
; true 1
-----
; true 1
=====
non-func call false
-----
; false 1
-----
; false 1
=====
non-func call other
-----
; "a" "b"
-----
; "a" "b"
=====
non-func call recursive
-----
; "a" ; not true
-----
; "a" false
=====
explicit ctx unit
-----
; do [a = 1, . | .a]
-----
1
=====
explicit ctx symbol
-----
; do [p = 1 : 2, p pair.first .]
-----
1
=====
explicit ctx do
-----
; do [p = 1 : 2, p | ; do [. pair.set_first 3, . pair.set_second 4], p]
-----
3 : 4
