;[
    p = proposition $ {
        function : not,
        input : 1,
        output : 2,
    },
    proposition.input p
]
-----
1
=====
;[
    p = proposition $ {
        function : not,
        input : 1,
        output : 2,
    },
    proposition.output p
]
-----
2
=====
;[
    p = proposition $ {
        function : not,
        input : 1,
        output : 2,
    },
    (proposition.function p) -== not
]
-----
true
=====
;[
    $map = function $ {
        body : input,
        input_mode : {map : . all true},
    },
    m = $map $ {
        function : not,
        input : true,
        output : false,
    },
    m ==- proposition.represent $ proposition $ m
]
-----
true
=====
;[
    m = proposition.represent $ proposition.prove $ not $ true,
    $map = function $ {
        body : input,
        input_mode : {map : . all true},
    },
    expected = $map $ {
        function : not,
        input : true,
        output : false,
        proved : true,
    },
    m === expected
]
-----
true
=====
;[
    p = proposition $ {
        function : not,
        input : 1,
        output : 2,
    },
    ((type_of p) -=- . $ proposition) and (proposition.proved p) -=- false
]
-----
true
