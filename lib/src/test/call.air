new
-----
do [
    f = any ; .,
    i = any ; .,
    c1 = f ';' i,
    c2 = form* ; f ; i,
    c3 = f '!' i,
    c4 = form* ; f ! i,
    (c1 == c2) and (c3 == c4)
]
-----
true
=====
new get
-----
do [
    f = any ; .,
    i = any ; .,
    c1 = f ';' i,
    c2 = f '!' i,
    (f == c1 call.function .) and (f == c2 call.function .) and (i == c1 call.input .) and (i == c2 call.input .)
]
-----
true
=====
set get
-----
do [
    c = any ; call,
    f = any ; .,
    i = any ; .,
    c call.set_function f,
    c call.set_input i,
    (f == c call.function .) and (i == c call.input .)
]
-----
true
=====
set return
-----
do [
    f1 = any ; .,
    i1 = any ; .,
    c1 = f1 ';' i1,
    c2 = f1 '!' i1,
    f2 = c1 call.set_function any ; .,
    i2 = c1 call.set_input any ; .,
    f3 = c2 call.set_function any ; .,
    i3 = c2 call.set_input any ; .,
    (f1 == f2) and (f1 == f3) and (i1 == i2) and (i1 == i3)
]
-----
true
=====
is_reverse
-----
do [
    c1 = (any .) ';' (any .),
    c2 = (any .) '!' (any .),
    (not ; c1 call.is_reverse .) and (c2 call.is_reverse .)
]
-----
true
=====
apply const
-----
call.apply ; form* ; 1 + 1
-----
2
=====
apply mut
-----
do [call.apply ; form* ; .a = 1, ^a]
-----
1
