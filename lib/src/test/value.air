; [u = any ! .unit, type_of .u]
-----
unit
=====
; [b = any ! .boolean, type_of .b]
-----
boolean
=====
; [i = any ! .integer, type_of .i]
-----
integer
=====
; [f = any ! .number, type_of .f]
-----
number
=====
; [b = any ! .byte, type_of .b]
-----
byte
=====
; [s = any ! .symbol, type_of .s]
-----
symbol
=====
; [s = any ! .text, type_of .s]
-----
text
=====
; [p = any ! .pair, type_of .p]
-----
pair
=====
; [c = any ! .call, type_of .c]
-----
call
=====
; [a = any ! .ask, type_of .a]
-----
ask
=====
; [c = any ! .comment, type_of .c]
-----
comment
=====
; [c = any ! .context, type_of .c]
-----
context
=====
; [f = any ! .function, type_of .f]
-----
function
=====
; [a = any ! .case, type_of .a]
-----
case
=====
; [a = any ! .answer, type_of .a]
-----
answer
=====
; [e = any ! .extension, type_of .e]
-----
extension
=====
; [a = ., type_of .a]
-----
unit
=====
; [a = true, type_of .a]
-----
boolean
=====
type_of ! not ! true
-----
false : boolean
=====
; [a = 1, type_of .a]
-----
integer
=====
; [a = 1.0, type_of .a]
-----
number
=====
; [a = #ff, type_of .a]
-----
byte
=====
; [a = .a, type_of .a]
-----
symbol
=====
; [a = "", type_of .a]
-----
text
=====
; [a = 1 : 2, type_of .a]
-----
pair
=====
; [a = id ! f ! a, type_of .a]
-----
call
=====
; [a = id ! f ? a, type_of .a]
-----
ask
=====
; [c = id ! n @ v, type_of .c]
-----
comment
=====
; [a = [], type_of .a]
-----
list
=====
; [a = {}, type_of .a]
-----
map
=====
; [a = function ! {body : $input}, type_of .a]
-----
function
=====
; [a = . context {}, type_of .a]
-----
context
=====
; [a = case ! {function : not, input : true, output : false}, type_of .a]
-----
case
=====
; [a = case.cache ! not '!' true, type_of .a]
-----
case
=====
true == false
-----
false
=====
false == false
-----
true
=====
1 == 1
-----
true
=====
1.0 == 1.0
-----
true
=====
..a == ..a
-----
true
=====
"" == ""
-----
true
=====
(1 : 2) == (1 : 2)
-----
true
=====
[1, 2] == [1, 2]
-----
true
=====
{} == {}
-----
true
=====
(1 2) == (1 2)
-----
true
=====
(1 ? 2) == (1 ? 2)
-----
true
=====
; [a = id ! n @ v, b = id ! n @ v, (.a == .b) and .a != .]
-----
true
=====
; [a = function ! {body : $input}, b = function ! {body : $input}, (.a == .b) and .a != .]
-----
true
=====
; [a = . context {}, b = . context {}, (.a == .b) and .a != .]
-----
true
=====
; [
    a = case ! {function : not, input : true, output : false},
    b = case ! {function : not, input : true, output : false},
    (.a == .b) and .a != .
]
-----
true
=====
; [
    a = answer.maybe ! 1,
    b = answer.maybe ! 1,
    (.a == .b) and .a != .
]
-----
true
=====
(1 + 1) == (3 - 1)
-----
true
=====
1 == "a"
-----
false
=====
1 != "a"
-----
true
=====
1 != 1
-----
false
=====
; [a = 1, .a == 1]
-----
true
=====
; [a = 1, .a != 1]
-----
false
=====
; [a = 1, 1 == .a]
-----
true
=====
; [a = 1, 1 != .a]
-----
false
=====
; [a = 1, b = 1, .a == .b]
-----
true
=====
; [a = 1, b = 1, .a != .b]
-----
false
=====
; [a = 1, .a == .a]
-----
true
=====
; [a = 1, .a != .a]
-----
false
=====
.a == .b
-----
.
=====
.a != .b
-----
.
=====
; [..a = 1, .$.a == 1]
-----
true
