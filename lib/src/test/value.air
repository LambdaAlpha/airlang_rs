;[u = any $ unit, type_of u]
-----
unit
=====
;[b = any $ bool, type_of b]
-----
bool
=====
;[i = any $ int, type_of i]
-----
int
=====
;[f = any $ float, type_of f]
-----
float
=====
;[b = any $ bytes, type_of b]
-----
bytes
=====
;[s = any $ symbol, type_of s]
-----
symbol
=====
;[s = any $ string, type_of s]
-----
string
=====
;[p = any $ pair, type_of p]
-----
pair
=====
;[c = any $ call, type_of c]
-----
call
=====
;[r = any $ reverse, type_of r]
-----
reverse
=====
;[c = any $ context, type_of c]
-----
context
=====
;[f = any $ function, type_of f]
-----
function
=====
;[p = any $ proposition, type_of p]
-----
proposition
=====
;[a = any $ answer, type_of a]
-----
answer
=====
;[e = any $ extension, type_of e]
-----
extension
=====
;[a = ., type_of a]
-----
unit
=====
;[a = .true, type_of a]
-----
bool
=====
type_of $ not $ .true
-----
.false : bool
=====
;[a = 1, type_of a]
-----
int
=====
;[a = 1.0, type_of a]
-----
float
=====
;[a = #xff, type_of a]
-----
bytes
=====
;[a = . $ a, type_of a]
-----
symbol
=====
;[a = "", type_of a]
-----
string
=====
;[a = 1 : 2, type_of a]
-----
pair
=====
;[a = . $ f $ a, type_of a]
-----
call
=====
;[a = . $ f ? a, type_of a]
-----
reverse
=====
;[a = [], type_of a]
-----
list
=====
;[a = {}, type_of a]
-----
map
=====
;[a = function $ {body : input}, type_of a]
-----
function
=====
;[a = . context {}, type_of a]
-----
context
=====
;[a = proposition $ {function : not, input : .true, output : .false}, type_of a]
-----
proposition
=====
;[a = proposition.prove $ not $ .true, type_of a]
-----
proposition
=====
.true -=- .false
-----
.false
=====
.false -=- .false
-----
.true
=====
1 -=- 1
-----
.true
=====
1.0 -=- 1.0
-----
.true
=====
(. a) -=- (. a)
-----
.true
=====
"" -=- ""
-----
.true
=====
(1 : 2) -=- (1 : 2)
-----
.true
=====
[1, 2] -=- [1, 2]
-----
.true
=====
{} -=- {}
-----
.true
=====
(1 2) -=- (1 2)
-----
.true
=====
(1 ? 2) -=- (1 ? 2)
-----
.true
=====
;[a = function $ {body : input}, b = function $ {body : input}, (a === b) and a =/- .]
-----
.true
=====
;[a = . context {}, b = . context {}, (a === b) and a =/- .]
-----
.true
=====
;[
    a = proposition $ {function : not, input : .true, output : .false},
    b = proposition $ {function : not, input : .true, output : .false},
    (a === b) and a =/- .
]
-----
.true
=====
;[
    a = answer.unverified $ 1,
    b = answer.unverified $ 1,
    (a === b) and a =/- .
]
-----
.true
=====
(1 + 1) -=- (3 - 1)
-----
.true
=====
1 -=- "a"
-----
.false
=====
1 -/- "a"
-----
.true
=====
1 -/- 1
-----
.false
=====
;[a = 1, a ==- 1]
-----
.true
=====
;[a = 1, a =/- 1]
-----
.false
=====
;[a = 1, 1 -== a]
-----
.true
=====
;[a = 1, 1 -/= a]
-----
.false
=====
;[a = 1, b = 1, a === b]
-----
.true
=====
;[a = 1, b = 1, a =/= b]
-----
.false
=====
;[a = 1, a === a]
-----
.true
=====
;[a = 1, a =/= a]
-----
.false
=====
a === b
-----
.
=====
a =/= b
-----
.
