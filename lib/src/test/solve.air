set_solver
-----
_ do [
    s1 = _ function {
        cell : true,
        context_access : .free,
        code : ._ : _ do [.a = .a + 1, .a],
        context : _ context {a : . : 0},
    },
    _ set_solver! s1,
    s2 = _ solver! .,
    [_ .s2 ., _ .s2 ., _ .s2 .]
]
-----
[1, 2, 3]
=====
solver calls set_solver or solver, no panic
-----
_ do [
    s1 = _ function {
        context_access : .free,
        code : ._ : _ do [_ set_solver! not, _ solver! .],
    },
    _ set_solver! s1,
    solve(_ not true),
    .
]
-----
.
=====
set_reverse solve
-----
_ do [not set_reverse! not, solve(_ not true)]
-----
false
=====
set_reverse reverse
-----
_ do [
    func_id = _ any symbol,
    reverse_func = _ any function,
    @func_id set_reverse! reverse_func,
    reverse_func == _ reverse! @func_id
]
-----
true
