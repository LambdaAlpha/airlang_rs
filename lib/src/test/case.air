do [
    c = case ; {
        function : not,
        input : 1,
        output : 2,
    },
    case.input c
]
-----
1
=====
do [
    c = case ; {
        function : not,
        input : 1,
        output : 2,
    },
    case.output c
]
-----
2
=====
do [
    c = case ; {
        function : not,
        input : 1,
        output : 2,
    },
    (case.function c) == not
]
-----
true
=====
do [
    c = case ; {
        function : "not",
        input : 1,
        output : 2,
    },
    (case.function c) == "not"
]
-----
true
=====
do [
    map_mode = mode ; {map : {} : id : eval},
    m = map_mode ; {
        function : not,
        input : true,
        output : false,
    },
    m == case.represent ; case ; m
]
-----
true
=====
do [
    m = case.represent ; case.cache ; not ';' true,
    map_mode = mode ; {map : {} : id : eval},
    expected = map_mode ; {
        function : not,
        input : true,
        output : false,
        is_cache : true,
    },
    m == expected
]
-----
true
=====
do [
    c = case ; {
        function : not,
        input : 1,
        output : 2,
    },
    tc = type_of ; c,
    (tc == ..case) and not ; (case.is_cache c)
]
-----
true
=====
do [
    c = case.cache ; not ';' (not false),
    case.input c
]
-----
true
=====
do [
    c = case.cache ; not ';' true,
    case.output c
]
-----
false
=====
do [
    c = case.cache ; not ';' true,
    (case.function c) == not
]
-----
true
=====
do [
    c = case.cache ; not ';' true,
    case.is_cache c
]
-----
true
