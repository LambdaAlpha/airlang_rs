length set
-----
do [
    a = any ; map,
    l1 = a map.length .,
    k = any ; .,
    v = any ; .,
    i = (a map.contains k) ? 0 : 1,
    a map.set k : v,
    l2 = a map.length .,
    l2 == l1 + i
]
-----
true
=====
length set_many
-----
do [
    a = any ; map,
    la = a map.length .,
    b = any ; map,
    lb = b map.length .,
    c = a map.set_many b,
    lc = c map.length .,
    lab = a map.length .,
    lab == la + lb - lc
]
-----
true
=====
items map
-----
do [
    a1 = any ; map,
    a2 = map ; a1 map.items .,
    a1 == a2
]
-----
true
=====
into_items map
-----
do [
    a1 = any ; map,
    a2 = a1,
    a3 = map ; a1 map.into_items .,
    (a1 == {}) and (a2 == a3)
]
-----
true
=====
keys set
-----
do [
    a1 = any ; map,
    a2 = set ; a1 map.keys .,
    a1 map.set_many a2,
    a1 == a2
]
-----
true
=====
into_keys set
-----
do [
    a1 = any ; map,
    a2 = set ; a1 map.keys .,
    a3 = set ; a1 map.into_keys .,
    (a1 == {}) and (a2 == a3)
]
-----
true
=====
values multiset
-----
do [
    a1 = any ; map,
    b1 = multiset ; a1 map.values .,
    a2 = {},
    i = 0,
    a1 for kv -> [
        a2 map.set i : kv pair.second .,
        i = i + 1,
    ],
    b2 = multiset ; a2 map.values .,
    b1 == b2
]
-----
true
=====
into_values multiset
-----
do [
    a1 = any ; map,
    a2 = multiset ; a1 map.values .,
    a3 = multiset ; a1 map.into_values .,
    (a1 == {}) and (a2 == a3)
]
-----
true
=====
set contains
-----
do [
    a = any ; map,
    k = any ; .,
    v = any ; .,
    a map.set k : v,
    a map.contains k
]
-----
true
=====
set get
-----
do [
    a = any ; map,
    k = any ; .,
    v = any ; .,
    a map.set k : v,
    v1 = a map.get k,
    v1 == v
]
-----
true
=====
set_many contains_all
-----
do [
    a = any ; map,
    b = any ; map,
    a map.set_many b,
    a map.contains_all b map.keys .
]
-----
true
=====
remove_many contains_any
-----
do [
    a = any ; map,
    b = any ; list,
    a map.remove_many b,
    not ; a map.contains_any b
]
-----
true
=====
set_many get_many
-----
do [
    a = any ; map,
    b = any ; map,
    a map.set_many b,
    b1 = a map.get_many b map.keys .,
    b == b1
]
-----
true
=====
get remove
-----
do [
    a = any ; map,
    k = any ; .,
    v1 = a map.get k,
    v2 = a map.remove k,
    c = a map.contains k,
    (not c) and (v1 == v2)
]
-----
true
=====
get_many remove_many
-----
do [
    a = any ; map,
    ks = any ; list,
    vs1 = a map.get_many ks,
    vs2 = a map.remove_many ks,
    c = a map.contains_any ks,
    (not c) and (vs1 == vs2)
]
-----
true
=====
clear
-----
do [
    a = any ; map,
    a map.clear .,
    a == {}
]
-----
true
=====
length
-----
{1 : 2, 3 : 3} map.length .
-----
{1 : 2, 3 : 3} : 2
=====
items map 1
-----
do [(m : i) = {1 : 2, 3 : 3} map.items ., map ^i]
-----
{1 : 2, 3 : 3}
=====
keys set 1
-----
do [(m : k) = {1 : 2, 3 : 3} map.keys ., set ^k]
-----
{1, 3}
=====
values multiset 1
-----
do [(m : v) = {1 : 2, 3 : 2} map.values ., multiset ^v]
-----
{2 : 2}
=====
contains 1
-----
{1 : 2} map.contains 1
-----
{1 : 2} : true
=====
contains 2
-----
{1 : 2} map.contains 2
-----
{1 : 2} : false
=====
contains_all 1
-----
{1 : 2, 3 : 4} map.contains_all [1, 3]
-----
{1 : 2, 3 : 4} : true
=====
contains_all 2
-----
{1 : 2, 3 : 4} map.contains_all [1, 2]
-----
{1 : 2, 3 : 4} : false
=====
contains_any 1
-----
{1 : 2, 3 : 4} map.contains_any [1, 2]
-----
{1 : 2, 3 : 4} : true
=====
contains_any 2
-----
{1 : 2, 3 : 4} map.contains_any [2, 4]
-----
{1 : 2, 3 : 4} : false
=====
set 1
-----
{1 : 2, 3 : 4} map.set 1 : 3
-----
{1 : 3, 3 : 4} : 2
=====
set 2
-----
{1 : 2} map.set 2 : 3
-----
{1 : 2, 2 : 3} : .
=====
set_many 1
-----
{1 : 2, 2 : 3} map.set_many {1 : 3, 3 : 4}
-----
{1 : 3, 2 : 3, 3 : 4} : {1 : 2}
=====
get 1
-----
{1 : 2} map.get 1
-----
{1 : 2} : 2
=====
get 2
-----
{1 : 2} map.get 2
-----
{1 : 2} : .
=====
get_many duplicate keys
-----
{1 : 2, 2 : 3, 3 : 4} map.get_many [1, 2, 1, 4]
-----
{1 : 2, 2 : 3, 3 : 4} : {1 : 2, 2 : 3}
=====
remove 1
-----
{1 : 2, 3 : 4} map.remove 1
-----
{3 : 4} : 2
=====
remove 2
-----
{1 : 2} map.remove 2
-----
{1 : 2} : .
=====
remove_many 1
-----
{1 : 2, 2 : 3, 3 : 4} map.remove_many [1, 3, 5]
-----
{2 : 3} : {1 : 2, 3 : 4}
=====
clear 1
-----
{1 : 2, 2 : 3} map.clear .
-----
{} : .
=====
map 1
-----
map [1 : 2, 3 : 4]
-----
{1 : 2, 3 : 4}
=====
map duplicate keys
-----
map [1 : 2, 1 : 3]
-----
{1 : 3}
=====
set duplicate keys 1
-----
set [1, 2, 2, 3]
-----
{1, 2, 3}
=====
set duplicate keys 2
-----
set [1, 2, 1]
-----
{1, 2}
=====
multiset 1
-----
multiset ["a", "b", "c", "c", "c", "b"]
-----
{"a" : 1, "b" : 2, "c" : 3}
